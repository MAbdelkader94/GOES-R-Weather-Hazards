// Define map center using the RFCs asset
var bounds = ee.FeatureCollection("projects/ee-mabdelka/assets/RFCs");
Map.centerObject(bounds, 4);
Map.setOptions('SATELLITE');  // Set the initial map visualization to "satellite"
Map.addLayer(bounds, {}, 'RFCs', true);  // Add RFC 

// Calculate yesterday's date for the dateSlider end property
var today = new Date();  // Get today's date
var yesterday = new Date(today);
yesterday.setDate(today.getDate() - 1);  // Subtract one day
var endDateString = yesterday.toISOString().split('T')[0];

// Create a date slider
var dateSlider = ui.DateSlider({
    period: 1,
    start: '2000-01-01',
    end: endDateString
});
Map.add(dateSlider);

// Add listener to the dateSlider
dateSlider.onChange(function(dateRange) {
    updateMap();
});

// Create layer selection dropdown, excluding Landsat layers
var layerSelect = ui.Select({
    items: ['GOES-16', 'MODIS Terra', 'MODIS Aqua', 'VIIRS', 'Sentinel-3'],
    onChange: updateMap
});
Map.add(layerSelect);

function updateMap() {
    var selectedDate = ee.Date(dateSlider.getValue()[0]).format('Y-MM-dd').getInfo();
    var selectedLayer = layerSelect.getValue();
    
    Map.layers().reset(); // clear existing layers
    Map.addLayer(bounds, {}, 'RFC Bounds', true);  // Ensure RFC bounds are always on the map

    if (selectedLayer === 'GOES-16') {
        getgoes16(selectedDate);
    } else if (selectedLayer === 'MODIS Terra') {
        getMODISTerra(selectedDate);
    } else if (selectedLayer === 'MODIS Aqua') {
        getMODISAqua(selectedDate);
    } else if (selectedLayer === 'VIIRS') {
        getVIIRS(selectedDate);
    } else if (selectedLayer === 'Sentinel-3') {
        getSentinel3(selectedDate);
    }
}


// MODIS Terra, MODIS Aqua, VIIRS, and Sentinel-3, GOES-R 16
/// MODIS sensor - Terra : 2000 to today
function getMODISTerra(date) {
    var nextDate = ee.Date(date).advance(1, 'day').format('Y-MM-dd').getInfo();
    var dataset = ee.ImageCollection('MODIS/061/MOD09GA')
                  .filterDate(date, nextDate)
                  .filterBounds(bounds);
    var trueColor143 = dataset.select(['sur_refl_b01', 'sur_refl_b04', 'sur_refl_b03'])
                              .first()  // Get the first image from the filtered collection
                              .clip(bounds);  // Clip to Lake Erie region
    var trueColor143Vis = {
      min: -100.0,
      max: 8000.0,
    };
    Map.addLayer(trueColor143, trueColor143Vis, 'MODIS Terra True Color (143)');
}

/// MODIS sensor - Aqua : 2000 to today
function getMODISAqua(date) {
    var nextDate = ee.Date(date).advance(1, 'day').format('Y-MM-dd').getInfo();
    var dataset = ee.ImageCollection('MODIS/061/MYD09GA')
                  .filterDate(date, nextDate)
                  .filterBounds(bounds);
    var trueColor143 = dataset.select(['sur_refl_b01', 'sur_refl_b04', 'sur_refl_b03'])
                              .first()  // Get the first image from the filtered collection
                              .clip(bounds);  // Clip to RFCs
    var trueColor143Vis = {
      min: -100.0,
      max: 8000.0,
    };
    Map.addLayer(trueColor143, trueColor143Vis, 'MODIS Aqua True Color (143)');
} 

/// VIIRS sensor : 
function getVIIRS(date) {
    var nextDate = ee.Date(date).advance(1, 'day').format('Y-MM-dd').getInfo();
    var dataset = ee.ImageCollection('NOAA/VIIRS/001/VNP09GA')
                  .filterDate(date, nextDate)
                  .filterBounds(bounds);
    var rgb = dataset.select(['M5', 'M4', 'M3'])
                     .first()  // Get the first image from the filtered collection
                     .clip(bounds);  // Clip to Lake Erie region
    var rgbVis = {
      min: 0.0,
      max: 3000.0,
    };
    Map.addLayer(rgb, rgbVis, 'VIIRS RGB');
}

///  SLSTR-3: 
function getSentinel3(date) {
    var nextDate = ee.Date(date).advance(1, 'day').format('Y-MM-dd').getInfo();
    var dataset = ee.ImageCollection('COPERNICUS/S3/OLCI')
                  .filterDate(date, nextDate)
                  .filterBounds(bounds);

    var rgb = dataset.select(['Oa08_radiance', 'Oa06_radiance', 'Oa04_radiance'])
                     .median()
                     .multiply(ee.Image([0.00876539, 0.0123538, 0.0115198]))
                     .clip(bounds);  // Clip to Lake Erie region

    var visParams = {
      min: 0,
      max: 6,
      gamma: 1.5,
    };
    Map.addLayer(rgb, visParams, 'Sentinel-3 RGB');
}

///  GOES-R: 
function getgoes16(date) {
    var nextDate = ee.Date(date).advance(1, 'day').format('Y-MM-dd').getInfo();
    var dataset = ee.ImageCollection('NOAA/GOES/16/MCMIPC')
                  .filterDate(date, nextDate)
                  .filterBounds(bounds);

    // Take mean of CMI images over the daylight period
    // var cmiMean = dataset.mean()
    var cmiMean = dataset.limit(1, 'system:time_start', false).first();
    
    // Unpack GOES data by multiplying by scale factor and adding offset
    var cmiBlue = cmiMean.select('CMI_C01').multiply(0.00031746).add(0);
    var cmiRed = cmiMean.select('CMI_C02').multiply(0.00031746).add(0);
    var cmiNIR = cmiMean.select('CMI_C03').multiply(0.00031746).add(0);
    // Make a true-color RGB by first 
    // generating a "psuedo-green" band
    var cmiGreen = (cmiRed.multiply(0.45)).add(cmiNIR.multiply(0.19)).add(cmiBlue.multiply(0.45));
    
    // Stack red, pseudo-green, and blue bands to make RGB
    var rgb = ee.Image.rgb(cmiRed, cmiGreen, cmiBlue).clip(bounds);

    // Create color palettes and visual parameters
    // var cmiVisParam = {min: 0.016,max: 0.19};
    var cmiVisParam = {min: 0.01,max: 0.3};
    //Map.addLayer(mtbs, {}, 'MTBS North Complex Boundary');
    Map.addLayer(rgb, cmiVisParam, 'GOES16 RGB');
}

// 
// Initialize the map
updateMap();
